{"ast":null,"code":"var _jsxFileName = \"/Users/oluwadahunsialawode/Desktop/mock-react/mock/src/components/General/General.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './General.scss';\nimport { Button } from './Buttons';\nimport { People } from './People';\nimport { data } from './people';\nimport { Schedule } from \"../Schedule\";\nimport arrow from \"./assets/moreArrow.svg\";\nimport { studentData } from '../studentData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PICTURESIZE = 105;\nexport const General = () => {\n  _s();\n\n  const [student, setStudent] = React.useState(true);\n  const [group, setGroup] = React.useState(false);\n  const [people, setPeople] = React.useState([]);\n  const [scroll, setScroll] = React.useState(0);\n  const [count, setCount] = React.useState(0);\n  const [selectedPerson, setSelectedPerson] = React.useState(0);\n  const mainScrollContainerRef = React.useRef();\n  const subScrollContainerRef = React.useRef(); // For the case of fetching the data\n\n  React.useEffect(() => {\n    setPeople(data);\n  }, []);\n  console.log('there is a re-render'); // Determine the clicked subtitle (students or groups)\n\n  function checkClick(event) {\n    if (event.target.className === 'student') {\n      setGroup(false);\n      setStudent(true);\n    } else if (event.target.className === 'group') {\n      setStudent(false);\n      setGroup(true);\n    }\n  } //  To show more students in the list upon \n\n\n  function moreClick() {\n    const mainScroll = mainScrollContainerRef.current.getBoundingClientRect().width;\n    const subScroll = subScrollContainerRef.current.getBoundingClientRect().width;\n    const size = Math.round(mainScroll / PICTURESIZE);\n    const slideProportion = Math.round(subScroll / mainScroll);\n    setCount(prev => prev + 1);\n\n    if (count < slideProportion) {\n      console.log(count < size);\n      setScroll(prev => prev + size);\n    } else if (count >= slideProportion) {\n      setScroll(0);\n      setCount(0);\n    }\n  } //   Function to highlight the selected student.\n\n\n  function selectPerson(idx) {\n    setSelectedPerson(idx);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"general__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"general__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"general__container__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general__container__content-title\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041C\\u043E\\u0438 \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general__container__content-subtitle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"student\",\n            onClick: checkClick,\n            children: \"\\u0423\\u0447\\u0435\\u043D\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"group\",\n            onClick: checkClick,\n            children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general__container__content-borderline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general__container__content-underline\",\n          children: [student ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"general__container__content-underline-student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"general__container__content-underline-student\",\n            style: {\n              border: \"2px solid transparent\",\n              backgroundColor: 'transparent'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), group ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"general__container__content-underline-group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"general__container__content-underline-group\",\n            style: {\n              border: \"2px solid transparent\",\n              backgroundColor: 'transparent'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general__container__content-classgroups\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"general__container__content-classgroups-button\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"#235390\",\n              text: \"Добавить ученика\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"#C200Af\",\n              text: \"Создать группу\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: mainScrollContainerRef,\n            className: \"general__container__content-classgroups-people\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: subScrollContainerRef,\n              className: \"general__container__content-classgroups-people-scroll\",\n              style: {\n                left: `${-PICTURESIZE * scroll}px `\n              },\n              children: people.map((person, idx) => {\n                return /*#__PURE__*/_jsxDEV(People, { ...person,\n                  active: idx === selectedPerson,\n                  selected: () => selectPerson(idx)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 32\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: moreClick,\n            src: arrow,\n            alt: \"moreButton\",\n            className: \"general__container__content-classgroups-moreButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Schedule, {\n        person: selectedPerson,\n        people: people,\n        data: studentData[selectedPerson]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(General, \"96SsJuqoh0+NvAEc0hcRmo2YSOM=\");\n\n_c = General;\n\nvar _c;\n\n$RefreshReg$(_c, \"General\");","map":{"version":3,"sources":["/Users/oluwadahunsialawode/Desktop/mock-react/mock/src/components/General/General.jsx"],"names":["React","Button","People","data","Schedule","studentData","PICTURESIZE","General","student","setStudent","useState","group","setGroup","people","setPeople","scroll","setScroll","count","setCount","selectedPerson","setSelectedPerson","mainScrollContainerRef","useRef","subScrollContainerRef","useEffect","console","log","checkClick","event","target","className","moreClick","mainScroll","current","getBoundingClientRect","width","subScroll","size","Math","round","slideProportion","prev","selectPerson","idx","border","backgroundColor","left","map","person","arrow"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './General.scss'\nimport {Button} from './Buttons'\nimport {People} from './People'\nimport {data} from './people'\nimport { Schedule } from \"../Schedule\";\nimport arrow from './assets/moreArrow.svg'\nimport {studentData} from '../studentData'\n\n\nconst PICTURESIZE= 105;\n\nexport const General = () => {\n\n    const [student,setStudent] = React.useState(true)\n    const [group, setGroup] = React.useState(false)\n    const [people,setPeople] = React.useState([])\n    const [scroll,setScroll] = React.useState(0)\n    const [count,setCount] = React.useState(0)\n    const[selectedPerson,setSelectedPerson] = React.useState(0)\n   \n\n\n    const mainScrollContainerRef = React.useRef()\n    const subScrollContainerRef = React.useRef()\n    \n    // For the case of fetching the data\n    React.useEffect(()=>{\n        setPeople(data)\n    },[])\n\n    console.log('there is a re-render')\n\n\n// Determine the clicked subtitle (students or groups)\n\n  function checkClick(event){\n      if (event.target.className === 'student'){\n        setGroup(false)\n        setStudent(true)\n      }else if(event.target.className === 'group'){\n        setStudent(false)\n        setGroup(true)\n      }\n  }\n\n\n\n//  To show more students in the list upon \n\n  function moreClick(){\n    const mainScroll =mainScrollContainerRef.current.getBoundingClientRect().width\n    const subScroll = subScrollContainerRef.current.getBoundingClientRect().width\n    \n    const size = Math.round(mainScroll/PICTURESIZE)\n  \n    const slideProportion = Math.round(subScroll/mainScroll)\n\n     setCount(prev =>prev+1)\n  \n    if (count < slideProportion){\n        console.log(count< size)\n         setScroll(prev=>prev+size)\n\n    }else if (count >= slideProportion){\n        setScroll(0)\n        setCount(0)\n    }    \n  }\n\n//   Function to highlight the selected student.\n\n  function selectPerson(idx){\n      setSelectedPerson(idx)\n  }\n\n\n\n\n\n  \n    return(\n\n        <div className=\"general__container\">\n        <div className=\"general__info\">\n\n            {/* Check the possibility of packing all in one function */}\n            <div className=\"general__container__content\">\n            <div className = \"general__container__content-title\">\n            <p>Мои ученики</p>\n            </div>\n\n            <div className=\"general__container__content-subtitle\">\n                <p className='student' onClick={checkClick} >Ученики</p>\n                <p className='group' onClick={checkClick}>Группы</p>\n            </div>\n            <div className=\"general__container__content-borderline\"></div>\n\n            <div className=\"general__container__content-underline\">\n\n            {student ? <div className=\"general__container__content-underline-student\"></div> : \n            <div className=\"general__container__content-underline-student\" style={{border:\"2px solid transparent\",backgroundColor:'transparent'}}></div>}\n            {/* {group && <div className=\"general__container__content-underline-group\"></div>} */}\n            {group ? <div className=\"general__container__content-underline-group\"></div>:\n            <div className=\"general__container__content-underline-group\"style={{border:\"2px solid transparent\",backgroundColor:'transparent'}}></div>}\n            </div>\n\n            <div className=\"general__container__content-classgroups\">\n                <div className=\"general__container__content-classgroups-button\">\n                    <Button color={\"#235390\"} text={\"Добавить ученика\"}></Button>\n                    <Button color={\"#C200Af\"} text={\"Создать группу\"}></Button>\n                </div>\n                \n                <div ref = {mainScrollContainerRef} className=\"general__container__content-classgroups-people\">\n                    <div ref = {subScrollContainerRef} className=\"general__container__content-classgroups-people-scroll\" style={{left:`${-PICTURESIZE * scroll}px `}}>\n\n                    {people.map((person,idx)=>{\n                        return <People key={idx} {...person} active={idx === selectedPerson}  selected={()=>selectPerson(idx)}></People>\n                    })} \n                    </div> \n                </div>\n                <img onClick={moreClick} src={arrow} alt=\"moreButton\" className=\"general__container__content-classgroups-moreButton\">\n                </img>\n            </div>\n            </div>\n            {/* It ends here */}\n\n            <Schedule person={selectedPerson} people={people} data={studentData[selectedPerson]} ></Schedule>\n            \n\n\n           \n\n        </div>\n        </div>\n       \n    )\n}"]},"metadata":{},"sourceType":"module"}