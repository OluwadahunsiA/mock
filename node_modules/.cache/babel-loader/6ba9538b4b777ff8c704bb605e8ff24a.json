{"ast":null,"code":"var _jsxFileName = \"/Users/oluwadahunsialawode/Desktop/mock-react/mock/src/components/Table/TableRow.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TableRow = ({\n  data\n}) => {\n  const newData = [];\n\n  for (const record of data) {\n    newData.push(record);\n  }\n\n  console.log(newData);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"main__table__row\",\n    children: data && data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"main__table__row__box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__table__row__box__single\",\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = TableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"sources":["/Users/oluwadahunsialawode/Desktop/mock-react/mock/src/components/Table/TableRow.jsx"],"names":["React","TableRow","data","newData","record","push","console","log","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAG7B,QAAMC,OAAO,GAAG,EAAhB;;AACA,OAAK,MAAMC,MAAX,IAAqBF,IAArB,EAA2B;AACvBC,IAAAA,OAAO,CAACE,IAAR,CAAaD,MAAb;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACJ,sBACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA,cACMD,IAAI,IAAIA,IAAI,CAACM,GAAL,CAAUC,IAAD,IAAQ;AAEvB,0BAAO;AAAe,QAAA,SAAS,EAAC,uBAAzB;AAAA,+BACH;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA,oBACCA;AADD;AAAA;AAAA;AAAA;AAAA;AADG,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KAPS;AADd;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CArBM;KAAMR,Q","sourcesContent":["import React from 'react'\n\nexport const TableRow = ({data}) =>{\n\n    \n      const newData = [];\n      for (const record of data) {\n          newData.push(record)\n        }\n        console.log(newData)\n    return(\n        <tr className=\"main__table__row\">\n            { data && data.map((item)=>{\n              \n                return <td key={item} className=\"main__table__row__box\">\n                    <div className=\"main__table__row__box__single\">\n                    {item}\n                    </div>\n                    </td>\n            })} \n        </tr>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}